# Generated by Django 4.1.13 on 2024-02-02 22:58

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250)),
                ('status', models.CharField(choices=[('DT', 'Desactivada'), ('AT', 'Activa')], default='AT', max_length=2)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='categorias')),
                ('creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-titulo'],
            },
        ),
        migrations.CreateModel(
            name='Articulo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250)),
                ('descripcion', models.CharField(max_length=240)),
                ('precio', models.IntegerField()),
                ('imagen', models.ImageField(blank=True, default='articulos/articulo.jpg', null=True, upload_to='articulos')),
                ('disponible', models.BooleanField(default=True)),
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categoria', to='store.categoria')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-titulo'],
            },
        ),
    ]
